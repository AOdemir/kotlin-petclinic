<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.samples.petclinic.owner.PetRepositoryTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2023-11-23T13:16:24" hostname="Alperens-MacBook-Pro.local" time="0.025">
  <properties/>
  <testcase name="shouldInsertPetIntoDatabaseAndGenerateId()" classname="org.springframework.samples.petclinic.owner.PetRepositoryTest" time="0.012"/>
  <testcase name="shouldUpdatePetName()" classname="org.springframework.samples.petclinic.owner.PetRepositoryTest" time="0.004"/>
  <testcase name="shouldFindAllPetTypes()" classname="org.springframework.samples.petclinic.owner.PetRepositoryTest" time="0.003"/>
  <testcase name="shouldFindPetWithCorrectId()" classname="org.springframework.samples.petclinic.owner.PetRepositoryTest" time="0.004"/>
  <system-out><![CDATA[2023-11-23T16:16:24.621+03:00  INFO 4756 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.springframework.samples.petclinic.owner.PetRepositoryTest]: PetRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-11-23T16:16:24.623+03:00  INFO 4756 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.springframework.samples.petclinic.PetClinicApplication for test class org.springframework.samples.petclinic.owner.PetRepositoryTest
Hibernate: select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=?
Hibernate: select p1_0.id,p1_0.name from types p1_0 where p1_0.id=?
Hibernate: select p1_0.id,p1_0.name from types p1_0 order by p1_0.name
Hibernate: insert into pets (birth_date,name,owner_id,type_id,id) values (?,?,?,?,default)
Hibernate: select o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,p1_0.owner_id,p1_0.id,p1_0.birth_date,p1_0.name,p1_0.type_id,o1_0.telephone from owners o1_0 left join pets p1_0 on o1_0.id=p1_0.owner_id where o1_0.id=?
Hibernate: select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id where p1_0.id=?
Hibernate: select p1_0.id,p1_0.name from types p1_0 order by p1_0.name
Hibernate: select p1_0.id,p1_0.birth_date,p1_0.name,o1_0.id,o1_0.address,o1_0.city,o1_0.first_name,o1_0.last_name,o1_0.telephone,t1_0.id,t1_0.name from pets p1_0 left join owners o1_0 on o1_0.id=p1_0.owner_id left join types t1_0 on t1_0.id=p1_0.type_id where p1_0.id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
